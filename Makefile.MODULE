# mwcollect3 Module Makefile
# $Id$
# attention, the following paths are relative to the mwcollect base directory!

#
# compiler flags
#

CXX = g++
CXXFLAGS += -I./src/include
CXXFLAGS += -D _GNU_SOURCE -fPIC

ifdef DEBUG
CXXFLAGS += -g -D _DEBUG
else
CXXFLAGS += -D NDEBUG
endif

# detect linux, osx or *bsd
POSIX_FLAVOUR := $(shell if test `uname -s` = 'Linux'; then echo -n 'LINUX_FLAVOURED'; elif test `uname -s` = 'OpenBSD'; then echo -n 'OBSD_FLAVOURED'; elif test `uname -s` = 'FreeBSD'; then echo -n 'OBSD_FLAVOURED'; fi)

ifndef POSIX_FLAVOUR
error:
	echo 'Error: Could not determine your POSIX flavour (one of Linux, *BSD or OSX)!'
	/bin/false
endif

CXXFLAGS += -D$(POSIX_FLAVOUR) -DPOSIX_FLAVOUR=\"$(POSIX_FLAVOUR)\"

# per module links

ifeq (${MODULE_NAME}, log-prelude)
LDFLAGS += -lprelude
endif

ifeq (${POSIX_FLAVOUR}, OBSD_FLAVOURED)
CXXFLAGS += -I/usr/local/include/
LDFLAGS += -L/usr/local/lib/
endif

#
# buildrules (normally unmodified for modules)
#
SOURCE_DIRECTORY = ./src/$(MODULE_NAME)
MODULE_LIBRARY = ./bin/modules/$(MODULE_NAME).so
MODULE_SOURCE = $(shell find $(SOURCE_DIRECTORY) -iname '*.cpp')
MODULE_OBJ = $(MODULE_SOURCE:.cpp=.o)

$(MODULE_LIBRARY): $(MODULE_OBJ)
	echo '[M] $@'
	$(CXX) $(CXXFLAGS) -o $@ -shared $(MODULE_OBJ) $(LDFLAGS)

$(SOURCE_DIRECTORY)/%.o: $(SOURCE_DIRECTORY)/%.cpp
	echo '[C] $<'
	$(CXX) $(CXXFLAGS) -D MWCD_VERSION=\"$(VERSION)\" -c -o $@ $<
	
clean:
	rm -f $(MODULE_LIBRARY)
	rm -f $(SOURCE_DIRECTORY)/*.o
